<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>StudyNote - Category - Ich bin yiwen.</title>
        <link>http://wysiwyz.github.io/categories/studynote/</link>
        <description>StudyNote - Category - Ich bin yiwen.</description>
        <generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 16 Mar 2023 14:20:15 &#43;0800</lastBuildDate><atom:link href="http://wysiwyz.github.io/categories/studynote/" rel="self" type="application/rss+xml" /><item>
    <title>Git Bash - some awesome commands</title>
    <link>http://wysiwyz.github.io/posts/git_bash_cmds/</link>
    <pubDate>Thu, 16 Mar 2023 14:20:15 &#43;0800</pubDate>
    <author>celine</author>
    <guid>http://wysiwyz.github.io/posts/git_bash_cmds/</guid>
    <description><![CDATA[紀錄一些 git bash 指令
git log -oneline 跟sourceTree_History_Description欄位基本一樣
git log 跟樓上一樣, 但多了些author/date訊息
Interactive Rebase 可用來修改local端的commit message 刪除local端commit 整理local端commits 合併多個commits為一個 將一個commit拆分為多個commits 注意：會重寫commit history，產生新的hash ID(i.e. new commit)
所以不能對已經push上remote repository的commits執行interactive rebase
git rebase -i HEAD~3
rebase interactive head till the three
要回去幾個節點之前? base commit是哪個?
(1) copy hash id 9a23775
(2) Head minus 3
接著會出現一個editor window，可控制head+前兩個commit
reword
不直接改commit msg，而是將pick改成reword，存檔關閉
接著才會出現該commit id的編輯器視窗，修改內文後存檔關閉 (esc+:wq)
squash
將該行commit和它的上一行(前一個commit)合併成同一個，存檔關閉 跳新視窗，寫入合併後的commit msg，存檔關閉
Voilà! 原本的兩個commits合併成一個惹！
git commit amend 可修改最近一筆local端本分支的 msg]]></description>
</item>
<item>
    <title>Javascript dashing dashshound</title>
    <link>http://wysiwyz.github.io/posts/javascript_2018/</link>
    <pubDate>Wed, 15 Mar 2023 10:09:41 &#43;0800</pubDate>
    <author>celine</author>
    <guid>http://wysiwyz.github.io/posts/javascript_2018/</guid>
    <description><![CDATA[下周工作開始要用到 javascript, jQuery, HTML, CSS，特此複習
🦊Basic_1 變數 第一個字母必須為英文字母、底線_、錢字號$
後面可接英文字母、底線_、錢字號$、數字
大小寫有區別
關鍵字、保留字不能當變數名稱，詳閱MDN
JavaScript 1.3 起支援Unicode，可用中文(盡量避免)
ES6之後可用var(變數)、let(作用範圍與var不同)、const
所有沒透過var宣告的變數，都會自動變成全域變數
1 2 m = 1; console.log(m); //未宣告var會有後遺症 已經被 var 宣告過的變數可以再次被宣告 [合法]
1 2 3 var m = 1; var m = 2; var m = 3; 透過 let 宣告的變數不能被再次宣告
1 2 3 let m = 1; let m = 2; //⚠️Uncaught SyntaxError: Identifier &#39;m&#39; has already been declared. 變數資料型別 變數本身不帶有資料型別資訊，其中的值/物件才有
變數沒有型別，值才有 JavaScript支援型別
基本型別 Primitives string, number, boolean, null, undefined Symbol (ES6之後多的型別) 物件型別 Object 可以用 typeof 運算子協助判斷型別]]></description>
</item>
<item>
    <title>Spring</title>
    <link>http://wysiwyz.github.io/posts/spring/</link>
    <pubDate>Mon, 13 Mar 2023 09:25:24 &#43;0800</pubDate>
    <author>celine</author>
    <guid>http://wysiwyz.github.io/posts/spring/</guid>
    <description><![CDATA[Spring Architecture Core Container Core - 提供框架最基本的部分 Bean - 提供Bean工廠 Context - 存取任何定義且被配置的物件 SpEL - Spring express language Data Access JDBC - 提供JDBC抽象層 ORM - 提供Object-Relational Mapping API物件關係映射的整合層 OXM - 提供抽象層 JMS - 包含產出與使用訊息的功能 Transaction - 支援programmatic與declarative交易管理 Web WebSocket - 支援two-way溝通(client-server) Servlet - 包含Spring MVC給予web應用的實作 Web - 提供web導向整合的基本功能 Portlet - 提供MVC實作，且鏡像web-servlet模組的功能 Misc. AOP Aspects - 提供AspectJ的整合 Instrumentation - 支援class instrumentation(在已編譯的.class檔案加入字節碼byte-code) 以及class loader implementation(在執行時將java類別動態載入JVM) Messaging - 支援STOMP作為WebSocket的sub-protocol STOMP: 流文本定向消息協議 Test - 支援Spring組件(component)的測試 原本的物件建構長這樣]]></description>
</item>
<item>
    <title>Lesson 01: Linux 筆記</title>
    <link>http://wysiwyz.github.io/posts/lesson_01_linux/</link>
    <pubDate>Sat, 04 Mar 2023 09:54:41 &#43;0800</pubDate>
    <author>celine</author>
    <guid>http://wysiwyz.github.io/posts/lesson_01_linux/</guid>
    <description><![CDATA[憑證具有 CIA 三要素
Confidentiality 機密性
Integrity
Availability
Others
Authenticity
Accountability
Non-repudiation
AAA, Triple A - 認證授權紀錄
基本等級設計 - 強制原則MAC、地方自治DAC、以角色為基準授權RBAC
&mdash; ntpdate 舊時代的工具，別用
Chrony_NTP_lab
Linux history (morning) Recommended .GUTS - jsurf 實戰 Linux 系統數位鑑識 (GoTop) 圖解 Linux 核心工作原理（GoTop） server 172.server desktopXX iburst systemctl restart chronydsystemctl enable chronydsystemctl status chronyd 在 Docker 設定時區 https://confluence.atlassian.com/kb/how-to-set-the-timezone-for-docker-container-976780914.html#:~:text=The%20timezone%20value%20in%20Atlassian,e%20TZ%3D.
另外一個設定時區方式 podman.io (官方比較少推)
兩種設定方式 官方主推指令方式 getent group wheet
設定帳號不能登入系統 也可以在 /opt/目錄下寫個 .sh 檔案，讓用戶在 desktop 登入遭拒絕之前先出示文字 or 其它執行動作]]></description>
</item>
<item>
    <title>Lesson 00: Linux 筆記</title>
    <link>http://wysiwyz.github.io/posts/lesson_00_linux/</link>
    <pubDate>Sat, 11 Feb 2023 10:08:41 &#43;0800</pubDate>
    <author>celine</author>
    <guid>http://wysiwyz.github.io/posts/lesson_00_linux/</guid>
    <description><![CDATA[資安是一個循環 這次會過不代表下次會過，每年都要複驗 ISO27001 改版（LA - lead auditor） Log server Windows 的 GPO policy 是什麼 .twcertcc : https://www.twcert.org.tw/tw/mp-1.html 營利目標 依公司法，企業營運是為了向股東負責 企業營運 以永續經營與營利為目標 發展產品或服務解決客戶之問題，或者滿足其需求 有利企業發展的事才考慮執行 機密性 產生營利的過程中，衍生出只有甲乙雙方才能知道的事件 營運過程中，衍生無法完全透明的內部資訊 營運過程中，產生敏感度較高的數位物件 (e.g. 財務、薪資) 營運過程中，人事時地物的產生與其產生結果，具有不同層級的影響力 目標 保護營運資產不被未授權的人存取或者破壞，使用IT方式達成目標 常用手法 人員階級、職等、業務範圍管理 實物管理（區域進出換證、資產盤點） 數位資訊管理 CentOS 8 安全措施 作業系統安全 作業系統安裝 系統紀錄 檔案稽核 檔案系統權限配置 系統防火牆 應用服務安全 Web SSL MariaDB (MySQL &hellip; audit 要付費) Samba(smb)/NFS [AP windows] (NFS) &mdash;-&gt; [AP linux] (NFS)
NFS: 可以做到細度、哪個 IP 可以對資料做存取 SRC cifs (smb)(smb3): 445/TCP 加密 linux 777 是什麼?]]></description>
</item>
<item>
    <title>1Z0-819 曾師筆記 (2/duology)</title>
    <link>http://wysiwyz.github.io/posts/ocpjp_11_2/</link>
    <pubDate>Sun, 05 Feb 2023 17:50:34 &#43;0800</pubDate>
    <author>celine</author>
    <guid>http://wysiwyz.github.io/posts/ocpjp_11_2/</guid>
    <description><![CDATA[# 01 泛型和集合物件 泛型 Java 5 之後加入泛型，使型別使用多了另一種彈性。
集合物件（用來裝填物件）＋泛型，可以限制裝填物件的型別。
使用泛型的效益 提供更彈性的「型別安全 type safety」檢查機制，原本在執行時才能發現的型別錯誤，現在在編譯時期就可以預發現 在集合物件 Collections 裡大量使用，限制內涵物件之型別 減少轉型 casting 需要，使程式碼更簡潔 使用泛型設計類別 可以將程式碼裡的符號 T換成 String( 即 UseString())，或換成 Shirt (即 UseShirt()) 常見的符號及表示方式如下： T -「型別（type）」 E -「成員（element）」 K -「鍵 - 值對裡的鍵（key）」 V -「鍵 - 值對裡的值（value）」 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 class UseAny&lt;T&gt; { private T t; public void add(T t) { this.]]></description>
</item>
<item>
    <title>Encrypt, Decrypt</title>
    <link>http://wysiwyz.github.io/posts/encrypt_decrypt/</link>
    <pubDate>Wed, 01 Feb 2023 14:01:22 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://wysiwyz.github.io/posts/encrypt_decrypt/</guid>
    <description><![CDATA[用途 怕被別人看見 弄成被看到也沒關係 [加密] 想給特定人看 避免對方也看不懂 [解密] 分類 類型 對稱加解密 非對稱加解密 實例 AES、3DES RSA、ECDSA &hellip; 加解密方式寫在同一張紙上[加解密方式] public key 加解密方式寫在不同紙上[加密方式] public key &hellip; client get by calling api[解密方式] private key &hellip; saved at Server side 概論 簡單、速度快、安全性低 複雜速度慢、安全性較高 特色 1. Client 和 Server 用同一把密鑰加解密2. AES/ {ECB/CBC...}/PaddingPattern 應用 1. 對大量明文的加密2. Https 的 SessionKey Appendix AES 加密結構說明 金鑰長度(bit) : AES-128 AES-192 AES-256 區塊間加密方式 : ECB - 可以被密推 CBC - 亂數 initial value 初始值 CFB - 亂數 initial value 初始值 OFB CTR 區塊填充方式: NoPadding - 不建議、會影響加密強度 ZeroBytePadding - 缺兩個填入 0 PKCS5Padding PKCS7Padding Example: AES-256/CBC/PKCS7Padding]]></description>
</item>
<item>
    <title>1Z0-819 曾師筆記 (1/duology)</title>
    <link>http://wysiwyz.github.io/posts/ocpjp_11/</link>
    <pubDate>Tue, 13 Dec 2022 21:10:22 &#43;0800</pubDate>
    <author>celine</author>
    <guid>http://wysiwyz.github.io/posts/ocpjp_11/</guid>
    <description><![CDATA[# 03 OOP 程式設計思維 統一塑模語言 Unified Modeling Language 類別圖 class diagram Has-A 關聯 關聯 Dependency : 兩者關係一般，有功能上的連結 聚合 Aggregation : 兩者關係較強， ClassD 可能是 ClassC 的一部分 像沙子集中一處，但也可以另外集結 組合 Composition : 類似聚合，但關係更強。一旦 ClassE 消失，ClassF 也消失，兩者生命週期一致 關係比較密實 Is-A 關聯 繼承 Inheritance : 箭頭方向指向父類別，使用實線 具現 Realization : 箭頭方向指向介面，使用虛線 01 使用 java 指令執行程式 該檔案位於 Java 安裝目錄的 bin 資料夾內，要執行的類別必須有 main 方法作為程式進入點
java JacketTest // java 程式編譯檔(不能加 class 的副檔名) 注意：
程式碼附檔名必須為 .java，否則編譯器將拒絕編譯 class 檔案內可以有多個沒有 public 修飾的 class，檔案名稱不一定要與那些 classes 名稱相同。編譯時，檔案內宣告的每一個 class 都會各自產生附檔名為 .]]></description>
</item>
<item>
    <title>Oracle Certified Associate Java PG</title>
    <link>http://wysiwyz.github.io/posts/ocajp/</link>
    <pubDate>Sun, 04 Dec 2022 14:57:52 &#43;0800</pubDate>
    <author>celine</author>
    <guid>http://wysiwyz.github.io/posts/ocajp/</guid>
    <description><![CDATA[OCAJP 紀錄題目的地方&hellip;
1. Hello Java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 public class HelloJava { public static void main(String[] args) { StringBuilder message = new StringBuilder(&#34;hello java!&#34;); int pos = 0; try { for (pos = 0; pos &lt; 12; pos++) { switch (message.charAt(pos)) { case &#39;a&#39;: case &#39;e&#39;: case &#39;o&#39;: String uc = Character.toString(message.charAt(pos)).toUpperCase(); message.]]></description>
</item>
<item>
    <title>Oracle Certified Professional Java PG</title>
    <link>http://wysiwyz.github.io/posts/ocpjp/</link>
    <pubDate>Tue, 08 Nov 2022 15:00:44 &#43;0800</pubDate>
    <author>celine</author>
    <guid>http://wysiwyz.github.io/posts/ocpjp/</guid>
    <description><![CDATA[OCPJP pro to be or else &hellip; no else
1. Regional Inner Class 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 public class Vehicle { int distance; Vehicle(int x) { this.distance = x; } public void increSpeed(int time) { int timeTravel = time; class Car { // line n1 int value = 0; public void speed() { value = distance / timeTravel; // line n2 System.]]></description>
</item>
</channel>
</rss>
