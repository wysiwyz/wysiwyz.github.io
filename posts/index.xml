<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - Ich bin yiwen.</title>
        <link>http://wysiwyz.github.io/posts/</link>
        <description>All Posts | Ich bin yiwen.</description>
        <generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 10 Apr 2023 09:53:01 &#43;0800</lastBuildDate><atom:link href="http://wysiwyz.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Cascading style sheet</title>
    <link>http://wysiwyz.github.io/posts/cascading_style_sheet/</link>
    <pubDate>Mon, 10 Apr 2023 09:53:01 &#43;0800</pubDate>
    <author>celine</author>
    <guid>http://wysiwyz.github.io/posts/cascading_style_sheet/</guid>
    <description><![CDATA[這一兩天上班在研究既有程式碼的CSS寫法，因為之後的需求要拉皮
看到什麼就記下來，之後複習的話再分類
overflow: hidden 直接隱藏超出範圍的文字
overflow: auto 與 overflow: scroll 類似，但 overflow:auto 只有在有需要時才會出現 scroll bar
參考: css overflow
list-style-type 設定清單的項目編碼符號
1 2 3 4 5 6 7 8 9 10 11 ul { list-style-type: none; /* list-style-type: disc; //實心黑圓點 list-style-type: circle; //空心圓圈 list-style-type: square; list-style-type: decimal; list-style-type: georgian; list-style-type: &#34;\1F44D&#34;; //👍 */ } . 以及 # #foo {}：id selector，像是id=foo .foo {}：class selector，例如class=&quot;foo&quot; 一個元素可以有多個class，用空格區別 class=&quot;foo bar&quot; #yIcon &gt; img 只選擇 id 為 yIcon 元素底下的直接子對象]]></description>
</item>
<item>
    <title>Lesson 04: Linux 筆記 - CA憑證、SELinux</title>
    <link>http://wysiwyz.github.io/posts/lesson_04_linux/</link>
    <pubDate>Sat, 08 Apr 2023 09:15:16 &#43;0800</pubDate>
    <author>celine</author>
    <guid>http://wysiwyz.github.io/posts/lesson_04_linux/</guid>
    <description><![CDATA[Strict Transport Security (HSTS) Apache Nginx HTTPS 加密流程 Client 連到 Server 時，Server 將 Public key 傳給 Client Client 使用 Public key 產生隨機碼，和 Server 建立加密通道。 Client 用 Public key 進行傳輸資料加解密，Server 用 Private key 進行傳輸資料加解密 實際的資料使用對稱式加密方式，透過已經建好的加密通道進行傳輸 https 使用了非對稱式與對稱式加密 Khoor, Olqxa 怎麼在廣大的領域中發現小小的弱點，突破當前使用之演算法的弱點 &ndash; Dr. Mathematics
凱薩加密演算法
字母位移預設三個字 @Desktop
1 2 root# mkdir demo; cd demo/ root# vi caesar-cipher.sh shellscript
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 #!]]></description>
</item>
<item>
    <title>1Z0-819 題目KO</title>
    <link>http://wysiwyz.github.io/posts/ocpjp_11_mockexam/</link>
    <pubDate>Wed, 05 Apr 2023 17:10:34 &#43;0800</pubDate>
    <author>celine</author>
    <guid>http://wysiwyz.github.io/posts/ocpjp_11_mockexam/</guid>
    <description><![CDATA[這裡放比較tricky的題目們
#62 1 2 3 4 5 6 7 8 9 10 class Employee { private String name; public void setName(String name) { String title = &#34;Dr. &#34;; name = title + name; } public String toString() { return name; } } And
1 2 3 4 5 public static void main(String[] args) { Employee p = new Employee(); p.setName(&#34;Who&#34;); System.out.println(p); } What&rsquo;s the resuld?
A. Dr. Who
B. Dr.]]></description>
</item>
<item>
    <title>1Z0-819 曾師筆記 (2/duology)</title>
    <link>http://wysiwyz.github.io/posts/ocpjp_11_2/</link>
    <pubDate>Mon, 27 Mar 2023 17:30:34 &#43;0800</pubDate>
    <author>celine</author>
    <guid>http://wysiwyz.github.io/posts/ocpjp_11_2/</guid>
    <description><![CDATA[# 01 泛型和集合物件 泛型 Java 5 之後加入泛型，使型別使用多了另一種彈性。
集合物件（用來裝填物件）＋泛型，可以限制裝填物件的型別。
使用泛型的效益 提供更彈性的「型別安全 type safety」檢查機制，原本在執行時才能發現的型別錯誤，現在在編譯時期就可以預發現 在集合物件 Collections 裡大量使用，限制內涵物件之型別 減少轉型 casting 需要，使程式碼更簡潔 使用泛型設計類別 可以將程式碼裡的符號 T換成 String( 即 UseString())，或換成 Shirt (即 UseShirt()) 常見的符號及表示方式如下： T -「型別（type）」 E -「成員（element）」 K -「鍵 - 值對裡的鍵（key）」 V -「鍵 - 值對裡的值（value）」 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 class UseAny&lt;T&gt; { private T t; public void add(T t) { this.]]></description>
</item>
<item>
    <title>すずめの戸締(toji)まり- 我出門了，我回來了 </title>
    <link>http://wysiwyz.github.io/posts/suzume_no_tojimari/</link>
    <pubDate>Mon, 27 Mar 2023 17:18:19 &#43;0800</pubDate>
    <author>celine</author>
    <guid>http://wysiwyz.github.io/posts/suzume_no_tojimari/</guid>
    <description><![CDATA[
鈴芽是一位平凡的高二少女，某天騎著自行車上學的下坡路上遇見東京地理系大學生（教師考生/斜槓家業關門師）草太，留著及肩捲髮，皮膚白皙的他右下眼角有一顆淚痣，穿著白色T恤、天藍色（azure; hex: #f0ffff）長大衣、脖子上掛著一把鑰匙的他獨自一人背對波光粼粼的海面，徒步走向宮崎當地的山區廢墟。
一句請問這附近有門、有廢墟嗎，在鈴芽心中發芽，開啟了這部作品的序幕。毅然決定翹課的鈴芽騎著單車來到廢棄小鎮，尋無他的身影，倒是來到了一個看似廢棄圓頂溫室花園前。積窪上奇妙的立者一扇木門，鈴芽看見門後那個叫做常世的地方，滿天繁星草原卻在一踏進門時轉瞬消失。
中午回到學校，正和朋友聊天配飯的鈴芽驚見天有異象，不安於室地回到廢墟，再次遇見草太哥，他們跟著大臣白貓貓，意外踏上關門之旅，愛媛 神戶 東京 仙台 岩手縣&hellip;.（這裡決定要好好守護這個故事就不爆雷了）
先把有觸及到我的閃光點條列下來&ndash;
劇情 鼓勵自己 常世裡的燦爛星空 渴望得到鈴芽關愛的大臣白貓🥰🤍 戲份不多但是很帥很成熟的大黑貓 撫養外甥女鈴芽12年的姨 念咒語之前，要想著這片土地上孕育的人與情 2011/3/11的地震到現在十二年了ಥ_ಥ 勇敢無畏的高中女生 特效 蚯蚓的各種型態 從地面向上蒸發的金色光束 鑰匙旁飄散的藍色雲絲光 ]]></description>
</item>
<item>
    <title>Cloud_architect_GCP</title>
    <link>http://wysiwyz.github.io/posts/cloud_architect_gcp/</link>
    <pubDate>Fri, 24 Mar 2023 13:39:15 &#43;0800</pubDate>
    <author>celine</author>
    <guid>http://wysiwyz.github.io/posts/cloud_architect_gcp/</guid>
    <description><![CDATA[Active learning - think and take notes
Review - every once in a while
Section 01 Section 02 Section 03 Section 04 Step00 Step02 - create managed instance groups (MIG) V2 Instance Groups How do you create a group of VM instances? Instance Group - Group of VM instances managed as a single entity Manage group of similar VMs having similar lifecycle as ONE UNIT Two Types of Instance Groups: Managed: Identical VMs created using a template: Features: Auto scaling, auto healing and managed releases Unmanaged: Different configuration for VMs in same group: Does NOT offer auto scaling, auto healing and other services NOT Recommended unless you need different kinds of VMs Location can be Zonal or Regional Regional gives you higher availability (RECOMMENDED) 建立 MIG (managed instance group) Instance template is mandatory Configure auto-scaling to automatically adjust number of instances based on load: Minimum number of instances Maximum number of instances Autoscaling metrics: CPU Utilization target or Load Balancer Utilization target, or Any other metric from Stack Driver Cool-down period Scale in controls Autohealing: Configure a heath check with initial delay 🚧]]></description>
</item>
<item>
    <title>Lesson 03: Linux 筆記 - 磁碟加密、Apache, Nginx, SSL</title>
    <link>http://wysiwyz.github.io/posts/lesson_03_linux/</link>
    <pubDate>Sat, 18 Mar 2023 09:30:38 &#43;0800</pubDate>
    <author>celine</author>
    <guid>http://wysiwyz.github.io/posts/lesson_03_linux/</guid>
    <description><![CDATA[LUKS 加密服務 適用對象 移動式設備資料保護
notebook, USB磁碟加密
提供32組插槽使用
把partition切成小塊加密，裡面放密碼、key_file
可以使用設定的密碼解密或者用key解密
注意事項 LUKS並不對檔案本身進行加密(針對整個partition,整個D槽) LUKS對於單一磁碟取走後能夠起保護作用 KUKS對於已經解密之磁碟內容不起保護作用 指令 cryptsetup luksFormat 建立加密磁碟 luksOpen 開啟加密磁碟 close 關閉已經開啟的加密磁碟 luks - 解密
mount - 掛起來
umount - 卸載
​ (順便同步, 如果未正確卸載可能會造成檔案毀損)
1 2 3 4 5 6 7 8 lsblk /dev/sdb cryptsetup luksFormat /dev/sdb cryptsetup luksOpen /dev/sdb secDisk mkfs.xfs /dev/mapper/secDisk mount /dev/mapper/secDisk /mnt touch /mnt/myfile umount /mnt cryptsetup close secDisk Dump/Status more cmds 使用插槽 刪除插槽 memcached的使用
Luks資料加密架構與資料救援方法
Linux檔案加密_GPG_GnuPG]]></description>
</item>
<item>
    <title>Lesson 02: Linux 筆記 - UGO, ACL, Samba, NFS, SFTP</title>
    <link>http://wysiwyz.github.io/posts/lesson_02_linux/</link>
    <pubDate>Fri, 17 Mar 2023 16:44:11 &#43;0800</pubDate>
    <author>celine</author>
    <guid>http://wysiwyz.github.io/posts/lesson_02_linux/</guid>
    <description><![CDATA[請假六小時，來補課arrrhh
何謂索引式檔案系統 沒有索引的時候，磁碟越大要掃描越久 自從有了索引，大大增加了檔案讀取的效率 日誌系統 確保檔案操作完成 減少檔案操作中斷的異常問題（寫入到一半停電之類的） 目前流行的檔案系統都有支援日誌功能 ext3/ext4 XFS 可以減少檔案損毀發生機率 參考書 大師養成起手式：從核心真正了解Linux運作原理 圖解Linux核心工作原理（五星推推⭐5） 掛載項目 在上層權限缺失的情況下，可以由mount point層面做最後一層限制 man fstab Options: noexec 檔案掛載時，要限制不能執行使用者放置的可執行檔 nosuid nodev（目前比較少用） Linux如果是作為log server，可能會有放置檔案上限問題
UGO User Group Other
由三組位元所組成（八進制）
l for link, d for directory, -一般檔案(執行檔也是), c或d裝置檔 drwxr-xr-x, dr-xr-x---, 數字:
❔ r w x - 數值 4 2 1 0 ⚠️666&amp; 777 注意
允許每個人都能讀寫檔案或目錄，可能會造成file tempering(檔案篡改)
SUID &amp; SGID &amp; SBIT
檔案系統 特殊權限 1. SetUID nosuid 在根目錄建立一個secure folder，設定成777，查看/secure/目錄的權限，]]></description>
</item>
<item>
    <title>Cloud native - the next gen</title>
    <link>http://wysiwyz.github.io/posts/native_cloud/</link>
    <pubDate>Fri, 17 Mar 2023 14:02:55 &#43;0800</pubDate>
    <author>celine</author>
    <guid>http://wysiwyz.github.io/posts/native_cloud/</guid>
    <description><![CDATA[現在沒有雲原生可是不行的，了解一下下
Cloud native 公有雲、私有雲、混合雲 動態環境 - Node上下, stateless vs stateful 可擴展 - auto scaling (HPA) 聲明式 - ansible, terraform, K8S yaml 容器、微服務、無服務器 - K8S, OCP, Cloud Run, Cloud Function 最小化用戶的操作負擔 - auto healing (liveness, readiness) 所有的服務最好都是stateless
Stateless vs Stateful Stateless 無狀態，每次請求都是獨立 example JWT .map() Vue/React/Angular service Deployment (K8S) Stateful 有狀態，每次請求與過去相關 example Session .reduce() MySQL Volume/StatefulSet(K8S) 聲明式 - Ansible 聲明式 - Terraform CKA Kubernetes 認證使用命令式 kubectl run nginx -image=nginx
實務上用聲明式]]></description>
</item>
<item>
    <title>Git Bash - some awesome commands</title>
    <link>http://wysiwyz.github.io/posts/git_bash_cmds/</link>
    <pubDate>Thu, 16 Mar 2023 14:20:15 &#43;0800</pubDate>
    <author>celine</author>
    <guid>http://wysiwyz.github.io/posts/git_bash_cmds/</guid>
    <description><![CDATA[紀錄一些 git bash 指令
git log -oneline 跟sourceTree_History_Description欄位基本一樣
git log 跟樓上一樣, 但多了些author/date訊息
Interactive Rebase 可用來修改local端的commit message 刪除local端commit 整理local端commits 合併多個commits為一個 將一個commit拆分為多個commits 注意：會重寫commit history，產生新的hash ID(i.e. new commit)
所以不能對已經push上remote repository的commits執行interactive rebase
git rebase -i HEAD~3
rebase interactive head till the three
要回去幾個節點之前? base commit是哪個?
copy hash id 9a23775 Head minus 3 接著會出現一個editor window，可控制head+前兩個commit
reword
不直接改commit msg，而是將pick改成reword，存檔關閉
接著才會出現該commit id的編輯器視窗，修改內文後存檔關閉 (esc+:wq)
squash
將該行commit和它的上一行(前一個commit)合併成同一個，存檔關閉 跳新視窗，寫入合併後的commit msg，存檔關閉
Voilà! 原本的兩個commits合併成一個惹！
git commit amend 可修改最近一筆local端本分支的 msg
Cherry-Picking - 合併特定一筆/特定幾筆commits [j1]&lt;--[j3]&lt;--[j2]--&lt;branch_R&gt;↖[j2]&lt;--[j4]--&lt;branch_J&gt; 主要還是用 rebase 跟 merge，只有特殊情境才用]]></description>
</item>
</channel>
</rss>
