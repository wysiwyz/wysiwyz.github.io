<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Git Bash - Tag - Ich bin yiwen.</title>
        <link>http://wysiwyz.github.io/tags/git-bash/</link>
        <description>Git Bash - Tag - Ich bin yiwen.</description>
        <generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 16 Mar 2023 14:20:15 &#43;0800</lastBuildDate><atom:link href="http://wysiwyz.github.io/tags/git-bash/" rel="self" type="application/rss+xml" /><item>
    <title>Git Bash - some awesome commands</title>
    <link>http://wysiwyz.github.io/posts/git_bash_cmds/</link>
    <pubDate>Thu, 16 Mar 2023 14:20:15 &#43;0800</pubDate>
    <author>celine</author>
    <guid>http://wysiwyz.github.io/posts/git_bash_cmds/</guid>
    <description><![CDATA[紀錄一些 git bash 指令
git log -oneline 跟sourceTree_History_Description欄位基本一樣
git log 跟樓上一樣, 但多了些author/date訊息
Interactive Rebase 可用來修改local端的commit message 刪除local端commit 整理local端commits 合併多個commits為一個 將一個commit拆分為多個commits 注意：會重寫commit history，產生新的hash ID(i.e. new commit)
所以不能對已經push上remote repository的commits執行interactive rebase
git rebase -i HEAD~3
rebase interactive head till the three
要回去幾個節點之前? base commit是哪個?
(1) copy hash id 9a23775
(2) Head minus 3
接著會出現一個editor window，可控制head+前兩個commit
reword
不直接改commit msg，而是將pick改成reword，存檔關閉
接著才會出現該commit id的編輯器視窗，修改內文後存檔關閉 (esc+:wq)
squash
將該行commit和它的上一行(前一個commit)合併成同一個，存檔關閉 跳新視窗，寫入合併後的commit msg，存檔關閉
Voilà! 原本的兩個commits合併成一個惹！
git commit amend 可修改最近一筆local端本分支的 msg]]></description>
</item>
</channel>
</rss>
